@using System.Configuration
@using DLMallas.Business
@using DLMallas.Utilidades
@using DLMallas.Business.Dto
@using DLMallas.App_Start
@using Microsoft.AspNet.Identity
<div class="main-menu navbar navbar-default" role="navigation">
    <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button>
    </div>
    <div class="navbar-collapse collapse">
        <ul class="nav navbar-nav">
            @*<li><a href="#">Perfil</a></li>
            <li><a href="#">Academia</a></li>
            <li class="dropdown">
                <a id="dLabel" role="button" data-toggle="dropdown" data-target="#" href="/page.html"> Mi Organización <span class="caret"></span> </a>
                <ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">
                    <li><a href="#">Eventos</a></li>
                    <li class="dropdown-submenu">
                        <a tabindex="-1" href="#">Estudios y Becas</a>
                        <ul class="dropdown-menu">
                            <li><a tabindex="-1" href="#">Estudiantes</a></li>
                            <li><a href="#">Programas de Becas</a></li>
                            <li class="active"><a href="becas01_buscador.html">Instituciones</a></li>
                        </ul>
                    </li>
                </ul>
            </li>
            <li><a href="#">Administración</a></li>
            <li><a href="#">Reportes</a></li>*@
            @{
                if (User.Identity.IsAuthenticated) {
                var menus = new Menu().ObtenerMenu(Variables.IdSociedad, Variables.Usuario); 
                @MenuRoot(menus)
            }}
        </ul>
    </div>
    <!--/.nav-collapse -->
</div>

@helper MenuRoot(IEnumerable<Node<DtoPagina>> nodes) {
    foreach (var node in nodes)
    {
        if (node.HasChildren)
        {
            // dibujar submenu con hijos
            <li class="dropdown">
                @MenuLevel2(node)
            </li>
        }
        else
        {
            @MenuItem(node)
        }
    }
}

@helper MenuLevel2(Node<DtoPagina> node)
{
    <a role="button" data-toggle="dropdown" data-target="#" href="#">@node.Value.Nombre<span class="caret"></span> </a>
    <ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">
        @foreach (var child in node.Children)
        {
            if (child.HasChildren)
            {
                @MenuLevel3(child)

            }
            else
            {
                @MenuItem(child)
            }
        }
    </ul>
    
}

@helper MenuLevel3(Node<DtoPagina> node)
{
    <li class="dropdown-submenu">
        <a tabindex="-1" href="#">@node.Value.Nombre</a>
        <ul class="dropdown-menu">
            @{
                string direccionHCM = Variables.UrlHcm;
            }
            @foreach (var child in node.Children)
            {
                if (child.HasChildren)
                {
                    @MenuLevel3(child)
                }
                else
                {
                    var url = child.Value.Pagina;
                    if (child.Value.Pagina.StartsWith("~/"))
                    {
                        url = Flurl.Url.Combine(direccionHCM, url.Substring(2));
                    }
                    @MenuItem(child)
                }
            }
        </ul>
    </li>
}

@helper MenuItem(Node<DtoPagina> node)
{
    string direccionHCM = Variables.UrlHcm;

    var url = node.Value.Pagina;
    if (url.StartsWith("~/"))
    {
        url = Flurl.Url.Combine(direccionHCM, url.Substring(2));
    }
    <li><a href="@url">@node.Value.Nombre</a></li>
}
